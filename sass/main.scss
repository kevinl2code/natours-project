$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;

$color-grey-dark: #777;
$color-white: #fff;
$color-black: #000;

*,
*::after,
*::before {
    margin: 0px;
    padding: 0px;
    box-sizing: inherit;
}

html {
    font-size: 62.5%;
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    /* font-size: 16px; */
    line-height: 1.7;
    color: $color-grey-dark;
    padding: 3rem;
    box-sizing: border-box;
}

.header {
    height: 95vh; /*Makes the element fill 95% of the viewport*/
    background-image: linear-gradient(
        to right bottom, 
        rgba($color-primary-light, 0.8), 
        rgba($color-primary-dark, 0.8)), 
        url(../img/hero.jpg);
    background-size: cover; /*Makes the background image fill the entire element*/
    background-position: top; /*Ensures the top of the image stays at the top of the viewport without being cropped. */
    position: relative;

    clip-path: polygon(0 0, 100% 0, 100% 75%, 0 100%); /*Explained lecture 6 17:00..  Creates the wedge effect on the bottom right of the source image*/

    &__logo-box {
        position: absolute; /*Has fixed position within the parent element (in this case Header)*/
        top: 4rem; /*Position of this element reletive to the top of the parent element*/
        left: 4rem; /*Position of this element reletive to the left of the parent element*/
    }

    &__logo {
        height: 3.5rem;
    }
    
    &__text-box {
        position: absolute;
        top: 40%;
        left: 50%;
        transform: translate(-50%, -50%); /*The parameters for translate are x and y coordinates.  This line of code changes the relative point of the element from the top left corner more towards its center.*/
        text-align: center;
    }
}



.heading-primary {
    color: $color-white;
    text-transform: uppercase;

    backface-visibility: hidden; /*For the purpose of this project, this just prevents a slight shake in the animation*/
    margin-bottom: 6rem;
    &--main {
        display: block; /*Note about block level elements - They occupy the entire width they have available and create line breaks*/
        font-size: 6rem;
        font-weight: 400;
        letter-spacing: 3.5rem;
    
        animation-name: moveInLeft; /*Calls the defined animation*/
        animation-duration: 1s;
        animation-timing-function: ease-out;
        
        /*
        Other animation properties
        animation-iteration-count: 3;
        animation-delay: 3s;
        */
    }
    
    &--sub {
        display: block;
        font-size: 2rem;
        font-weight: 700;
        letter-spacing: 1.75rem;
    
        animation: moveInRight 1s ease-out;  /*Short hand way of writing what's also in the sibling element*/
    }
}



@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-10rem);  /* At 0% of the animation, the element will be positioned -100px on the X axis (ie 100px left)*/
    }

    80% {
        transform: translateX(1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0); /*Represents the standard position of the element if there existed no effects.*/
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(10rem);  /* At 0% of the animation, the element will be positioned +100px on the X axis (ie 100px right)*/
    }

    80% {
        transform: translateX(-1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0); /*Represents the standard position of the element if there existed no effects.*/
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(3rem);  /* At 0% of the animation, the element will be positioned +100px on the X axis (ie 100px right)*/
    }

    100% {
        opacity: 1;
        transform: translate(0); /*Represents the standard position of the element if there existed no effects.*/
    }
}

.btn {
    &:link,             /*formatting an anchor element to appear as a button*/
    &:visited {
        text-transform: uppercase;
        text-decoration: none;
        padding: 1.5rem 4rem;
        display: inline-block;
        border-radius: 10rem;
        transition: all .2s;
        position: relative;
        font-size: 1.6rem;
    }
    
    &:hover {
        transform: translateY(-3px);
        box-shadow: 0 1rem 2rem rgba($color-black,.2);     /*first value is x-axis shadow, second is y.  third value is the blur*/
        
        &::after {
            transform: scaleX(1.4) scaleY(1.6);
            opacity: 0;
        }
    }
    
    &:active {
        transform: translateY(-1px);
        box-shadow: 0 .5rem 1rem rgba($color-black,.2);
    }
    
    &--white {              /*formatting an anchor element to appear as a button*/
        background-color: $color-white;
        color: $color-grey-dark;
   
        &::after {
            background-color: $color-white;
        }
    }
    
    &::after {
        content: "";
        display: inline-block;
        height: 100%;
        width: 100%;
        border-radius: 10rem;
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        transition: all .4s;
    }
    
    &--animated {
        animation: moveInBottom .5s ease-out .75s;
        animation-fill-mode: backwards;
    }
}


